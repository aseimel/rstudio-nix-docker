# .github/workflows/build.yml
name: Build and Push RStudio Docker Image

on:
  schedule:
    - cron: '0 2 * * *'  # daily at 02:00 UTC
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: rstudio-nix-docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.11

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine latest RStudio version in nixpkgs
        id: version
        shell: bash
        run: |
          set -euo pipefail
          RSTUDIO_VERSION=$(nix-instantiate --eval -E '(import <nixpkgs> {}).rstudio-server.version' | tr -d '"')
          SAFE_TAG=$(printf "%s" "$RSTUDIO_VERSION" | sed 's/[^A-Za-z0-9_.-]/-/g')
          echo "raw=$RSTUDIO_VERSION"   >> "$GITHUB_OUTPUT"
          echo "safe=$SAFE_TAG"          >> "$GITHUB_OUTPUT"
          echo "RStudio version (nixpkgs): $RSTUDIO_VERSION"
          echo "Sanitized Docker tag:     $SAFE_TAG"

      - name: Skip if this version already exists on GHCR
        shell: bash
        run: |
          set -euo pipefail
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          SAFE_TAG='${{ steps.version.outputs.safe }}'
          if docker manifest inspect ghcr.io/$OWNER_LC/rstudio-nix:$SAFE_TAG >/dev/null 2>&1; then
            echo "Image already exists: ghcr.io/$OWNER_LC/rstudio-nix:$SAFE_TAG"
            exit 0
          fi
          echo "No existing image for tag $SAFE_TAG. Proceeding to build."

      - name: Build Docker image tarball with Nix
        shell: bash
        run: |
          set -euo pipefail
          nix-build docker-image.nix -o result
          ls -lh result

      - name: Load image into Docker
        shell: bash
        run: |
          set -euo pipefail
          docker load < result
          docker images || true

      - name: Tag and push
        shell: bash
        run: |
          set -euo pipefail
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          DATE_TAG=$(date -u +%Y%m%d)
          SAFE_TAG='${{ steps.version.outputs.safe }}'

          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:latest
          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:$DATE_TAG
          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:$SAFE_TAG

          docker push ghcr.io/$OWNER_LC/rstudio-nix:latest
          docker push ghcr.io/$OWNER_LC/rstudio-nix:$DATE_TAG
          docker push ghcr.io/$OWNER_LC/rstudio-nix:$SAFE_TAG

          echo "Pushed tags: latest, $DATE_TAG, $SAFE_TAG"
