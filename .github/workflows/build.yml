# .github/workflows/build.yml
name: Build and Push RStudio Docker Image

on:
  schedule:
    - cron: '0 2 * * *'  # daily at 02:00 UTC
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: rstudio-nix-docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.11

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine latest RStudio version in nixpkgs
        id: version
        shell: bash
        run: |
          set -euo pipefail
          RSTUDIO_VERSION=$(nix-instantiate --eval -E '(import <nixpkgs> {}).rstudio-server.version' | tr -d '"')
          echo "version=$RSTUDIO_VERSION" >> "$GITHUB_OUTPUT"
          echo "RStudio version from nixpkgs: $RSTUDIO_VERSION"

      - name: Skip if this version already exists on GHCR
        shell: bash
        run: |
          set -euo pipefail
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          if docker manifest inspect ghcr.io/$OWNER_LC/rstudio-nix:${{ steps.version.outputs.version }} >/dev/null 2>&1; then
            echo "Image tag already exists: ghcr.io/$OWNER_LC/rstudio-nix:${{ steps.version.outputs.version }}"
            echo "Nothing to do. Exiting."
            exit 0
          fi
          echo "No existing image for version ${{ steps.version.outputs.version }}. Proceeding to build."

      - name: Build Docker image tarball with Nix
        shell: bash
        run: |
          set -euo pipefail
          nix-build docker-image.nix -o result
          ls -lh result

      - name: Load image into Docker
        shell: bash
        run: |
          set -euo pipefail
          docker load < result
          docker images | grep -E '^rstudio-nix\s+latest'

      - name: Tag and push
        shell: bash
        run: |
          set -euo pipefail
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          DATE_TAG=$(date -u +%Y%m%d)

          # Sanity: read version we evaluated earlier (no Nix vars in shell)
          RSTUDIO_VERSION='${{ steps.version.outputs.version }}'

          # Tag for GHCR
          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:latest
          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:$DATE_TAG
          docker tag rstudio-nix:latest ghcr.io/$OWNER_LC/rstudio-nix:$RSTUDIO_VERSION

          # Push
          docker push ghcr.io/$OWNER_LC/rstudio-nix:latest
          docker push ghcr.io/$OWNER_LC/rstudio-nix:$DATE_TAG
          docker push ghcr.io/$OWNER_LC/rstudio-nix:$RSTUDIO_VERSION

          echo "Pushed: latest, $DATE_TAG, $RSTUDIO_VERSION"
